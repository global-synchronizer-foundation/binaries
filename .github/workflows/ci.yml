name: Binaries CI

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  copy-binaries:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_REPO: ${{ github.repository }}
      GITHUB_ACTOR: ${{ github.actor }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq skopeo make
          curl -fsSL -o /tmp/get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 /tmp/get_helm.sh
          /tmp/get_helm.sh

      - name: Run the Script
        run: |
          chmod +x ./ci/gsf-copy-binaries.sh && ./ci/gsf-copy-binaries.sh

      - name: Get GSF Devnet Version
        run: |
          echo "GSF_DEVNET_VERSION=$(curl -s https://docs.dev.global.canton.network.sync.global/info | jq -r .sv.version)" >> $GITHUB_ENV

      - name: Announce the release to validator-operators
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "Splice release ${{ env.GSF_DEVNET_VERSION }} is ready for deployment on DevNet"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: |
                    :tada: Splice release `${{ env.GSF_DEVNET_VERSION }}` is ready for deployment on DevNet, and is available from the GSF
                    :ship: â…” of Super Validator nodes have upgraded to this release, including the GSF Super Validator node
                    *SV node status here*: https://sync.global/sv-network
                    *Release notes here*: https://docs.dev.sync.global/release_notes.html

      - name: Announce to validator-announce@lists.sync.global
        env:
          VALIODATOR_OPERATORS_GROUP_ID: "133138"
          GROUPS_IO_USER: ${{ secrets.GROUPS_IO_USER }}
          GROUPS_IO_PASS: ${{ secrets.GROUPS_IO_PASS }}
        run: |
          trap 'rm -f password.txt cookies.txt message.html' EXIT

          curl_options=(-fsS)

          LOGIN_RESPONSE_COOKIES=$(
            curl "${curl_options[@]}" -X POST \
              "https://lists.sync.global/api/v1/login" \
              -c "cookies.txt" \
              -d "email=$GROUPS_IO_USER" \
              -d "password=$GROUPS_IO_PASS"
          )   
          ls cookies.txt

          CSRF_TOKEN=$(echo "$LOGIN_RESPONSE_COOKIES" | jq -er '.user.csrf_token')
          echo "CSRF Token: $CSRF_TOKEN"
              
          echo "Creating a new draft"
          DRAFT_ID=$(
            curl "${curl_options[@]}" -X POST \
              "https://lists.sync.global/api/v1/newdraft" \
              -b "cookies.txt" \
              -d "csrf=$CSRF_TOKEN" \
              -d "draft_type=draft_type_post" \
              -d "group_id=$VALIODATOR_OPERATORS_GROUP_ID" |
            jq -er '.id'
          )
          echo "Draft ID: $DRAFT_ID"

          VERSION=$GSF_DEVNET_VERSION envsubst < ./ci/splice_release_message.html.template > message.html

          echo "updating draft with message content"
          curl "${curl_options[@]}" -X POST \
            "https://lists.sync.global/api/v1/updatedraft" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -b "cookies.txt" \
            -d "csrf=$CSRF_TOKEN" \
            -d "draft_id=$DRAFT_ID" \
            -d "group_id=$VALIODATOR_OPERATORS_GROUP_ID" \
            -d "subject=Splice release ${{ env.GSF_DEVNET_VERSION }} is ready for deployment on DevNet" \
            --data-urlencode "body@message.html"

          echo "Posting the draft"
          curl "${curl_options[@]}" -X POST \
            "https://lists.sync.global/api/v1/postdraft" \
            -b "cookies.txt" \
            -d "csrf=$CSRF_TOKEN" \
            -d "draft_id=$DRAFT_ID" \
            -d "group_id=$VALIODATOR_OPERATORS_GROUP_ID"
